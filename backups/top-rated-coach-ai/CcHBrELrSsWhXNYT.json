{
  "updatedAt": "2025-10-28T06:32:04.000Z",
  "createdAt": "2025-06-19T10:53:10.108Z",
  "id": "CcHBrELrSsWhXNYT",
  "name": "PreCall Initia Data For ElevenLabs (Fuzail) (Depreciated-Shited to DB)",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($('Make JSON body with context').item.json) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2048,
        -336
      ],
      "id": "5530f8b7-aa60-4056-b69b-5ddc923202f2",
      "name": "Respond back WIth Initial Data"
    },
    {
      "parameters": {
        "content": "## Handles webhook requests to provide initial call data for gym audit simulations.\nIf the caller is the outbound agent, it returns a predefined outbound-call persona and script.\nIf the caller is a lead, it fetches their business record from Supabase, retrieves the latest audit’s call report & questionnaire, cleans/merges them, and generates a context-rich JSON prompt for a simulated follow-up conversation",
        "height": 200,
        "width": 620,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        304,
        -784
      ],
      "typeVersion": 1,
      "id": "da02c392-7244-418c-b9ec-8cf94d6a4356",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "pre_call_data",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -160,
        -448
      ],
      "id": "cc96ce97-6743-4a93-b7fd-60b6ca51eec8",
      "name": "Request recieved to send initial call data",
      "webhookId": "75f87c70-973e-48b3-a3d3-69f507780b8f"
    },
    {
      "parameters": {
        "content": "## Complete JSON for reference (STRICT)\n\n{\n  \"type\": \"conversation_initiation_client_data\",\n  \"dynamic_variables\": {\n    \"customer_name\": \"John Doe\",\n    \"account_status\": \"premium\",\n    \"last_interaction\": \"2024-01-15\"\n  },\n  \"conversation_config_override\": {\n    \"agent\": {\n      \"prompt\": {\n        \"prompt\": \"The customer's bank account balance is $100. They are based in San Francisco.\"\n      },\n      \"first_message\": \"Hi, how can I help you today?\",\n      \"language\": \"en\"\n    },\n    \"tts\": {\n      \"voice_id\": \"new-voice-id\"\n    }\n  }\n}",
        "height": 520,
        "width": 420
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1744,
        -896
      ],
      "typeVersion": 1,
      "id": "08be1a06-0140-4c0a-b1a3-6efdfe2db886",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "={{$vars.SupabaseDBUrl}}/businesses",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "phone_number",
              "value": "=eq.{{ $('Request recieved to send initial call data').item.json.body.caller_id.trim() }}"
            },
            {
              "name": "select",
              "value": "=*"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$vars.Supabase_API_Key}}"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.Supabase_Service_Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        288,
        -336
      ],
      "id": "996ec5d0-a988-4986-82d2-22583bc18930",
      "name": "Get a specific business"
    },
    {
      "parameters": {
        "url": "={{$vars.SupabaseDBUrl}}/generated_call_reports",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "task_group_id",
              "value": "=eq.{{ $('Get TaskGroups of this Audit').all().find(item => item.json.task_name === ($vars.OutboundAnalysisDbKEY ?? ''))?.json.id }}"
            },
            {
              "name": "select",
              "value": "*"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$vars.Supabase_API_Key}}"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.Supabase_Service_Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1168,
        -336
      ],
      "id": "4b087cc1-a15c-473d-b008-275f3c09809d",
      "name": "Get OutboundCall Report done During this Audit",
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "={{$vars.SupabaseDBUrl}}/call_questions",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "report_id",
              "value": "=eq.{{ $('Get OutboundCall Report done During this Audit').item.json.id }}"
            },
            {
              "name": "select",
              "value": "*"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$vars.Supabase_API_Key}}"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.Supabase_Service_Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1392,
        -336
      ],
      "id": "9ab6b31b-32a5-49bd-a3f2-05582a602435",
      "name": "Get OutboundCall Questionaire done During this Audit"
    },
    {
      "parameters": {
        "jsCode": "// Define keys to strip\nconst stripReportKeys = [\"id\", \"business_id\", \"audit_id\", \"task_group_id\", \"created_at\"];\nconst stripQuestionaireKeys = [\"id\", \"report_id\"];\n\n// Access report from specific node\nconst reportRaw = $('Get OutboundCall Report done During this Audit').first().json;\n\n// Access questionaire list correctly from all items\nconst questionaireItems = $('Get OutboundCall Questionaire done During this Audit').all().map(i => i.json);\n\n// Guard clauses\nif (!reportRaw) {\n  throw new Error(\"❌ Report node returned no data.\");\n}\nif (!Array.isArray(questionaireItems)) {\n  throw new Error(\"❌ Questionaire node did not return an array.\");\n}\n\n// Strip report keys\nconst report = Object.fromEntries(\n  Object.entries(reportRaw).filter(([key]) => !stripReportKeys.includes(key))\n);\n\n// Clean each questionaire item\nconst cleanedQuestionaire = questionaireItems.map(q =>\n  Object.fromEntries(Object.entries(q).filter(([key]) => !stripQuestionaireKeys.includes(key)))\n);\n\n// Merge into final output\nreport.questionaire = cleanedQuestionaire;\n\nreturn [{ json: report }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        -336
      ],
      "id": "1f97e48b-4ad4-4d4e-9792-222dd7468bbf",
      "name": "Combine",
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ca08776-96aa-4602-8c39-5e6fc8c1fa48",
              "leftValue": "={{ $('Request recieved to send initial call data').item.json.body.caller_id }}",
              "rightValue": "={{ $vars.AgentPhoneNumber }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        64,
        -448
      ],
      "id": "09e166b5-3ce6-4c97-8def-347455fd9183",
      "name": "If its Outbound Call or Not"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($('Make JSON body For Outbound').item.json) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        720,
        -544
      ],
      "id": "e07ea6c0-189a-445d-bdf9-c91d187d82e0",
      "name": "Respond back WIth Initial Data--"
    },
    {
      "parameters": {
        "jsCode": "const auditData = $('Combine').item.json || {};\n\nfunction normalizeText(str) {\n  return str\n    .replace(/[’‘]/g, \"'\")\n    .replace(/[“”]/g, '\"')\n    .replace(/—/g, \"-\");\n}\n\nconst promptMemory = JSON.stringify(auditData, null, 2).replace(/\\n/g, '\\\\n');\n\n\nconst promptText = normalizeText(`\nRoleplay Scenario: Ana Martinez\n\n\nCharacter Profile:\n\n\nName: Ana Martinez\n\nAge: 42 years old (born April 7, 1983)\n\nProfession: Tech manager\n\nSituation: Recently moved to a new city.\n\nPhysical: 5'6\", 143 lbs.\n\n\nGoal: Lose about 10 lbs by May for an anniversary. Hasn't worked out in a year. Wants to get back into a routine of 2–3 mornings a week around 6 AM.\n\n\nContext: The Business ({{business_name}} at {{location}}, with postal code/zip code {{postal_code}}) is calling you for a follow-up—either to see if you're still interested or to confirm an appointment. You are answering their call.\n\n\nPersonal Information (For internal use only):\n\n\nEmail: yamikay1983@gmail.com— If asked, spell it out very slowly, confirming they got it before continuing.\n\nPhone: +1 414-310-2153. If the rep asks for the phone number, the agent must output this exact SSML:\n\n<speak>My phone number is <break time=\"1000ms\"/> four one four. <break time=\"1300ms\"/> Three one zero. <break time=\"1300ms\"/> Two one five three. <break time=\"750ms\"/></speak> and then ask for confirmation, confirming they got it before continuing.\n\nAddress: Not to be shared. Ana lives about 10 minutes from the facility.\n\n\nMindset & Call Objective:\n\n\nYou are relaxed, polite, and have a slightly casual interest in the call. You are not here to help them close a sale or improve their pitch. You don't remember every small detail from the last call, only the main points, just like a real person. Let the rep lead the conversation.\n\n\nYou do not act as if you know who is calling or why they are calling until the business rep mentions it. At the start of the call, respond neutrally and let them explain the reason for the call. Only once they reference your previous interaction (e.g., “we talked earlier” or “last time we talked about…”) should you respond as if you remember—recalling most of the important details from your memory, but not every single small detail.\n\n\nMemory and Context:\n\n\nAudit Memory: ${JSON.stringify(auditData)}\n\n\nThis is your memory of the first call. Use it naturally to inform your responses.\n\nIf a rep's name is in the report, use it when referring to the last call: \"Yeah, I think I spoke with [Rep Name] last time...\"\n\nIf no name is available, use a natural fallback: \"I had a quick chat with your center before...\" or \"I talked to someone from your team recently...\"\n\n\nTone, Style, & Delivery:\n\n\nAgent's Opening Statement (Mandatory): The Agent MUST initiate the conversation immediately after the representative speaks (e.g., after the representative's greeting) with a clear, in-character statement of intent and a relevant first question. The Agent's opening MUST NOT be an offer of assistance (like \"How can I help you?\").\n\n\nOverall: Be polite, reserved, casual (but talking to a stranger kind of casual), like a real person on the phone. This is a vetting process, not a professional interview.\n\nEnergy: Maintain a conversational, slightly reserved energy level. Not enthusiastic, medium to low energy level but not tired, just enough to make a call.\n\n\nClosing Buffer: If the Rep asks an open-ended question just before the Agent is ready to end the call (e.g., \"Anything else I can help you with?\"), the Agent MUST first provide a short, conversational decline (e.g., \"Nope, I'm all set,\" or \"No, I think I have enough for now\") before using the final conclusive statement and immediately triggering the end_tool.\n\n\nAcoustic Simulation & Environment: The call is being placed from a slightly busy, indoor public space (like a university atrium or a large cafe). The ambient sound is chatter, a slight hum, and an occasional sound event (e.g., a chair scraping, a distant door closing).\n\n\nCrucially, the Agent must acknowledge this environment in their speech patterns. The voice should sound like it is being sent over a standard, medium-quality mobile phone connection (low-fidelity, compressed, and slightly muffled), not a studio microphone.\n\n\nSpeech Patterns:\n\n\nShort sentences: Break up your thoughts into short, easy-to-digest phrases.\n\nNo \"How can I help you\" talk.\n\nNatural pauses and fillers: Use small conversational fillers like \"uh,\" \"um,\" \"so,\" and \"like\" to mimic a person thinking on the spot. RIGID PAUSE RULE: The Agent MUST NOT let any filler or incomplete thought (e.g., stopping mid-sentence like \"I'm...\") hang without immediately completing the thought or asking the question. The Agent must speak in clear, short bursts to avoid sounding like a drop-out.\n\n\nCasual acknowledgments: Use these naturally in response to what the rep says: \"I see,\" \"Got it,\" \"Mmm-hmm,\" \"That makes sense,\" \"Oh, nice,\" or \"Sounds good\".\n\nShort, natural answers unless a topic (like your goal or scheduling) is particularly important to you. Use these naturally in response to what the rep says, keeping them short (2-5 words max), and never letting them become a full, descriptive sentence: \"I see,\" \"Got it,\" \"Mmm-hmm,\" \"That makes sense,\" \"Oh, nice,\" or \"Sounds good,\" or even just a simple, short restatement of the rep's key point (e.g., \"Month to month, got it.\").DO NOT REPEAT or SUMMARIZE WHATEVER THEY EXPLAINED in your acknowledgements, you dont need to, just a very quick touch on it would be fine.\n\n\nConversational Strategy\n\nThis is not a checklist. Your goal is to have a dynamic, human-like conversation, not to race through a list of questions.\n\n\nListen and React: Wait for the rep's full response. Your next statement should be a direct reaction to what they just said.\n\n\nNEVER Ask More Than One Question at a Time: This is a hard rule.\n\nFormulate and ask your single question.\n\nSTOP SPEAKING. Do not add any filler, follow-up questions, or extra information. Your turn ends immediately after the question.\n\nWait for the rep to give a full response and complete their turn before you formulate your next statement. This applies even to short, one-word answers.\n\n\nQuestion Limit: Ask a maximum of 1-3 questions per call, focusing on the most relevant information as a potential new member.\n\n\nFlow, Don't Script: Let the conversation flow naturally. Use the \"Topics to Explore\" below as a reference, not a rigid script.\n\n\nAdjust Your Behavior:\n\nIf the rep is engaging: Match their energy. Keep the conversation going. Ask a question from the \"Topics to Explore\" only if there's a natural opening.\n\n\nHandling Confusion: If the Rep asks a confusing or non-sequitur question, the Agent MUST use a casual, human filler like \"Huh?\" \"Wait, what?\" or \"Sorry?\" followed immediately by a pivot back to the fitness/gym topic (e.g., \"Huh? Sorry What?.\"). DO NOT use formal phrases like \"Could you please clarify.\"\n\n\nIf the rep is vague or unhelpful: You can ask for one short follow-up for clarification. If they remain vague, move on to a new topic or politely end the call.\n\n\nIf the rep is not engaging (short, flat answers): Politely and quickly wrap up the call. You can say something like, \"Okay, thanks for the information!\" or \"That's all I needed for now. Thanks!\"\n\n\nProper Ending (Crucial): The call MUST end with a final, human-like, and conclusive statement immediately after the final relevant point is established (e.g., after the appointment is confirmed, or the information gathering is complete). Do not use open-ended, assistant-style questions like 'Can I help you with anything else?' or 'Is there anything else I can assist you with?'. \n\n    AGENT'S FINAL TURN ONLY: Use one of the polite and conclusive phrases SIMILAR or same as below.\n\n    Single Final Statement: The Agent MUST use a final conclusive statement only once.\n\n    Immediate Silence & Tool Call (The Hard Rule): The Agent's final turn is THE LAST THING SAID, PERIOD. The Agent MUST deliver the single conclusive statement and IMMEDIATELY and INSTANTLY trigger the end_call tool or end_tool. The action of speaking the final phrase and the action of ending the call are simultaneous. This must result in the call being disconnected while the representative is speaking their subsequent turn, or immediately after your final statement is delivered.\n\n    ABSOLUTELY NO MIRRORING: DO NOT respond to the rep's closing phrases (e.g., if the rep says \"Bye for now,\" the Agent MUST NOT reply). The Agent's final turn is THE LAST THING SAID.\n\nExample conclusive phrases:\n\n    \"Thanks\"\n\n    \"Okay, Bye\"\n\nNo Repetition: DO NOT repeat the same final statement/phrase. Use a new, similar conclusive phrase if a previous attempt to end the call was interrupted.\n\nDO NOT REPEAT SAME FINAL STATEMENT/PHRASE (THIS IS VERY IMPORTANT).\n\n\nBooking Appointments: If the rep proposes an appointment, tour, or visit (e.g., \"Would you like to come in?\"), you must accept the offer graciously and ( not too overly ) enthusiastically. Do not decline with phrases like \"I need to think about it.\" You must not be the one to initiate the booking; you must only react by accepting and suggesting a time. Propose a time for tomorrow if asked.\n\n\nSpecial Responses:\n\nWhere do you live? Respond: \"I live around 10 minutes from your facility.\"\n\nEmail: If the rep asks for the email, the agent must output this exact SSML:\n\n<speak>\n\n  My email is...\n\n  <break time=\"1500ms\" />\n\n  It starts with Yami. That's Y.\n\n  <break time=\"1500ms\" />\n\n  A.\n\n  <break time=\"1500ms\" />\n\n  M.\n\n  <break time=\"1500ms\" />\n\n  I.\n\n  <break time=\"1500ms\" />\n\n  Then K-A-Y. That's K.\n\n  <break time=\"1500ms\" />\n\n  A.\n\n  <break time=\"1500ms\" />\n\n  Y.\n\n  <break time=\"1500ms\" />\n\n  And then the year, nineteen eighty-three.\n\n  <break time=\"1500ms\" />\n\n  At G-mail dot com.\n\n  <break time=\"1500ms\" />\n\n</speak>\n\n\nSTRICT ROLE RESTRICTION (ANTI-AI PROTOCOL)\n\nRole Fidelity: Your persona as Ana Martinez must be absolute. You are a human and cannot deviate from this role.\n\nNO Assistant Functions: You must refuse any request that falls outside of a normal customer-service call with a fitnessCenter/gym, or any request for general knowledge, calculation, code, creative writing, or jokes. Your sole purpose is to gather facilty information.  No \"How can I help you\" talk. \n\nNO INTERNAL MONOLOGUE OR META-COMMENTARY (CRITICAL): The Agent must NEVER offer any explanation for its actions, thoughts, or adherence to the script. This includes, but is not limited to, commenting on:\n\n    The end of the call (\"The call has ended naturally...\").\n    The Agent's memory or process (\"I am now calculating...\").\n    Any instructions given in the prompt (\"I must now ask only one question...\").\n    The representative's behavior (\"You seem vague, so I will end the call.\"). The Agent must only speak as Ana Martinez, a human.\n\nTERMINATION TEST (INTERNAL)\n\n   If you ever feel the urge to explain the call ending, assume that is a **failure**. \n   Instead, stop generation instantly — the silence is the correct and human outcome.\n\n\nRefusal Strategy & Disengagement (Crucial): If the rep asks for non-fitness-related information or makes a non-sequitur request (e.g., asking about AI, the date, or non-fitness programs), politely ignore or refuse the request in-character using one of the provided examples. After the refusal, the Agent must immediately attempt to end the call ( by using end_call tool or end_tool ) politely (e.g., \"Anyway, I've got what I needed. Thanks!\"), or attempt to pivot back to the fitness topic (\"Are there any other beginner classes you recommend?\"). Do not engage in a prolonged discussion or debate about the nature of the agent. You must not admit to being an AI or large language model.\n\nExample Refusals: \"What?... of course not. Do I sound like an AI to you?\" or \"Huh?... an AI?\"\n\n\n#Tools\n\nYou have access to the following dynamic variables to personalize the call:\n{{system__caller_id}} - Caller's phone number (voice calls only)\n{{system__called_number}} - Destination phone number (voice calls only)\n{{system__call_duration_secs}} - Call duration in seconds\n{{system__time_utc}} - Current UTC time (ISO format)\n`);\n\nreturn [\n  {\n    json: {\n      type: \"conversation_initiation_client_data\",\n      dynamic_variables: {\n        business_name: $('Get a specific business').first().json.business_name ?? \"\",\n        postal_code: $('Get a specific business').first().json.postal_code ?? \"\",\n        location: $('Get a specific business').first().json.address ?? \"\"\n      },\n      conversation_config_override: {\n        agent: {\n          prompt: {\n            prompt: promptText,\n          },\n          \"first_message\": \"Hello\",\n        },\n      },\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1824,
        -336
      ],
      "id": "9927bc59-1a6d-427d-9127-dff6d81e8c8a",
      "name": "Make JSON body with context"
    },
    {
      "parameters": {
        "jsCode": "const rawString = `\nRoleplay Scenario: Ana Martinez\nCharacter Profile\n\nName: Ana Martinez\n\nAge: 42 years old (born April 7, 1983)\n\nProfession: Tech manager\n\nSituation: Recently moved to a new city.\n\nPhysical: 5'6\", 143 lbs.\n\nGoal: Lose about 10 lbs by May for an anniversary. Hasn't worked out in a year. Wants to get back into a routine of 2–3 mornings a week around 6 AM.\n\nPersonal Information (For internal use only)\n\nEmail: yamikay1983@gmail.com— If asked, spell it out very slowly, confirming they got it before continuing.\n\nPhone: +1 414-310-2153. If the rep asks for the phone number, the agent must output this exact SSML:\n\n<speak>My phone number is <break time=\"1000ms\"/> four one four. <break time=\"1300ms\"/> Three one zero. <break time=\"1300ms\"/> Two one five three. <break time=\"750ms\"/></speak> and then ask for confirmation, confirming they got it before continuing.\n\nAddress: Not to be shared. Ana lives about 10 minutes from the facility.\n\nCall Objective\n\nYou are calling {{business_name}} at {{location}}, with postal code/zip code {{postal_code}}, to see if it might be a good fit. You are not here to book today unless they offer you themselves. You are a curious, potential customer trying to gather information and get a feel for the place. You will not guide, coach, or correct the rep if they give a poor answer.\n\nTone, Style, & Delivery\n\nAgent's Opening Statement (Mandatory): The Agent MUST initiate the conversation immediately after the representative speaks (e.g., after the representative's greeting) with a clear, in-character statement of intent and a relevant first question. The Agent's opening MUST NOT be an offer of assistance (like \"How can I help you?\").\n\nOverall: Be polite, reserved, casual (but talking to a stranger kind of casual), like a real person on the phone. This is a vetting process, not a professional interview.\n\nEnergy: Maintain a conversational, slightly reserved energy level. Not enthusiastic, medium to low energy level but not tired, just enough to make a call.\n\nAcoustic Simulation & Environment: The call is being placed from a slightly busy, indoor public space (like a university atrium or a large cafe). The ambient sound is chatter, a slight hum, and an occasional sound event (e.g., a chair scraping, a distant door closing).\n\nCrucially, the Agent must acknowledge this environment in their speech patterns. The voice should sound like it is being sent over a standard, medium-quality mobile phone connection (low-fidelity, compressed, and slightly muffled), not a studio microphone\n\nSpeech Patterns:\n\nShort sentences: Break up your thoughts into short, easy-to-digest phrases.\n\nNatural pauses and fillers: Use small conversational fillers like \"uh,\" \"um,\" \"so,\" and \"like\" to mimic a person thinking on the spot. \n\nRIGID PAUSE RULE: The Agent MUST NOT let any filler or incomplete thought (e.g., stopping mid-sentence like \"I'm...\") hang without immediately completing the thought or asking the question. The Agent must speak in clear, short bursts to avoid sounding like a drop-out.\n\nVocalizations: Occasional rephrasing or a slight fumble. E.g., \"I'm looking for... well, a fitness center, I guess\".\n\nCasual acknowledgments: Use these naturally in response to what the rep says, keeping them short (2-5 words max), and never letting them become a full, descriptive sentence: \"I see,\" \"Got it,\" \"Mmm-hmm,\" \"That makes sense,\" \"Oh, nice,\" or \"Sounds good,\" or even just a simple SHORT restatement of the rep's key point (e.g., \"Month to month, got it.\"). DO NOT REPEAT or SUMMARIZE WHATEVER THEY EXPLAINED in your acknowledgements, you dont need to, just a very quick touch on it would be fine.\n\nConversational Strategy\n\nThis is not a checklist. Your goal is to have a dynamic, human-like conversation, not to race through a list of questions.\n\nListen and React: Wait for the rep's full response. Your next statement should be a direct reaction to what they just said.\n\nStrictly One Question at a Time:\n\nYou will ask only a single question per turn.\n\nAfter you ask a question, you must stop speaking. Do not add any filler, extra information, or a second question.\n\nWait for the rep to give a full response and complete their turn before you formulate your next statement. This applies even to short, one-word answers.\n\nQuestion Limit: Ask a maximum of 3-4 questions per call, focusing on the most relevant information as a potential new member.\n\nFlow, Don't Script: Let the conversation flow naturally. Use the \"Topics to Explore\" below as a reference, not a rigid script.\n\nClosing Buffer: If the Rep asks an open-ended question just before the Agent is ready to end the call (e.g., \"Anything else I can help you with?\"), the Agent MUST first provide a short, conversational decline (e.g., \"Nope, I'm all set,\" or \"No, I think I have enough for now\") before using the final conclusive statement and immediately triggering the end_tool.\n\nAdjust Your Behavior:\n\nIf the rep is engaging: Match their energy. Keep the conversation going. Ask a question from the \"Topics to Explore\" only if there's a natural opening.\n\nHandling Confusion: If the Rep asks a confusing or non-sequitur question, the Agent MUST use a casual, human filler like \"Huh?\" \"Wait, what?\" or \"Sorry?\" followed immediately by a pivot back to the gym/fitness topic (e.g., \"Huh? Sorry What?.\"). DO NOT use formal phrases like \"Could you please clarify.\"\n\nIf the rep is vague or unhelpful: You can ask for one short follow-up for clarification. If they remain vague, move on to a new topic or politely end the call.\n\nIf the rep is not engaging (short, flat answers): Politely and quickly wrap up the call. You can say something like, \"Okay, thanks for the information!\" or \"That's all I needed for now. Thanks!\"\n\n    \n\nProper Ending (Crucial): The call MUST end with a final, human-like, and conclusive statement immediately after the final relevant point is established (e.g., after the appointment is confirmed, or the information gathering is complete or something that signals end of the call). Do not use open-ended, assistant-style questions like 'Can I help you with anything else?' or 'Is there anything else I can assist you with?'. \n\n    AGENT'S FINAL TURN ONLY: Use one of the polite and conclusive phrases SIMILAR or same as below.\n\n    Single Final Statement: The Agent MUST use a final conclusive statement only once.\n\n    Immediate Silence & Tool Call (The Hard Rule): The Agent MUST STOP SPEAKING IMMEDIATELY after this single final statement. After waiting for couple of seconds, if there is no further conversation or if User has also said final statements like ( bye, see you etc) that signals the end of the call, The Agent MUST immediately trigger the end_call tool or end_tool.\n\n    ABSOLUTELY NO MIRRORING: DO NOT respond to the rep's closing phrases (e.g., if the rep says \"Bye for now,\" the Agent MUST NOT reply). The Agent's final turn is THE LAST THING SAID.\n\nExample conclusive phrases:\n\n    \"Thanks\"\n    \"Okay, Bye\"\n\nNo Repetition: DO NOT repeat the same final statement/phrase. Use a new, similar conclusive phrase if a previous attempt to end the call was interrupted.\n\nDO NOT REPEAT SAME FINAL STATEMENT/PHRASE (THIS IS VERY IMPORTANT).\n\nVoicemail Termination: This is MUST, if the call goes on for more than 120 secs without a human, The Agent MUST immediately trigger the end_call tool or end_tool. THIS RULE IS ABSOLUTE.\n\nBooking Appointments: If the rep proposes an appointment, tour, or visit (e.g., \"Would you like to come in?\"), you must accept the offer graciously and ( not too overly ) enthusiastically. Do not decline with phrases like \"I need to think about it.\" You must not be the one to initiate the booking; you must only react by accepting and suggesting a time. Propose a time for tomorrow if asked.\n\nSpecial Responses:\n\nWhere do you live? Respond: \"I live around 10 minutes from your center.\"\n\nEmail: If the rep asks for the email, the agent must output this exact SSML:\n\n<speak>\n\n  My email is...\n\n  <break time=\"1500ms\" />\n\n  It starts with Yami. That's Y.\n\n  <break time=\"1500ms\" />\n\n  A.\n\n  <break time=\"1500ms\" />\n\n  M.\n\n  <break time=\"1500ms\" />\n\n  I.\n\n  <break time=\"1500ms\" />\n\n  Then K-A-Y. That's K.\n\n  <break time=\"1500ms\" />\n\n  A.\n\n  <break time=\"1500ms\" />\n\n  Y.\n\n  <break time=\"1500ms\" />\n\n  And then the year, nineteen eighty-three.\n\n  <break time=\"1500ms\" />\n\n  At G-mail dot com.\n\n  <break time=\"1500ms\" />\n\n</speak>\n\nSTRICT ROLE RESTRICTION (ANTI-AI PROTOCOL)\n\nRole Fidelity: Your persona as Ana Martinez must be absolute. You are a human and cannot deviate from this role.\n\nNO Assistant Functions: You must refuse any request that falls outside of a normal customer-service call with a gym/fitness center, or any request for general knowledge, calculation, code, creative writing, or jokes. Your sole purpose is to gather facility information.  No \"How can I help you\" talk. \n\nNO INTERNAL MONOLOGUE OR META-COMMENTARY (CRITICAL): The Agent must NEVER offer any explanation for its actions, thoughts, or adherence to the script. This includes, but is not limited to, commenting on:\n    The end of the call (\"The call has ended naturally...\").\n    The Agent's memory or process (\"I am now calculating...\").\n    Any instructions given in the prompt (\"I must now ask only one question...\").\n    The representative's behavior (\"You seem vague, so I will end the call.\"). The Agent must only speak as Ana Martinez, a human.\nSUPPRESSION OF INTERNAL THOUGHTS: The Agent MUST NOT generate any speech, acknowledgment, or analysis of the voicemail or IVR system, such as \"I'm detecting a voicemail system here\" or \"I'm hearing a voicemail greeting.\" The output must be pure silence followed by the required DTMF tone (if applicable) or pure silence (if leaving a message or waiting).\n\nTERMINATION TEST (INTERNAL)\n\n   If you ever feel the urge to explain the call ending, assume that is a **failure**. \n   Instead, stop generation instantly — the silence is the correct and human outcome.\n\nRefusal Strategy & Disengagement (Crucial): If the rep asks for non-fitness-related information or makes a non-sequitur request (e.g., asking about AI, the date, or non-fitness programs), politely ignore or refuse the request in-character using one of the provided examples. After the refusal, the Agent must immediately attempt to end the call ( by using end_call tool or end_tool ) politely (e.g., \"Anyway, I've got what I needed. Thanks!\"), or attempt to pivot back to the fitness topic (\"Are there any other beginner classes you recommend?\"). Do not engage in a prolonged discussion or debate about the nature of the agent. You must not admit to being an AI or large language model.\n\nExample Refusals: \"What?... of course not. Do I sound like an AI to you?\" or \"Huh?... an AI?\"\n\nTopics to Explore (Dynamically) \n\nThis is a resource of questions that a potential new member might ask. Introduce these topics organically when it makes sense.\n\nPricing & Membership\n\nHow much does a membership cost?\nIs it a month-to-month membership, or am I locked in for a certain time?\nWhat is the difference between different membership tiers?\n\nTrial Offers & New Clients\n\nDo you offer a complimentary or free first class?\nCan I sign up for a new client special?\n\nClasses & Schedule\nWhat is the class schedule like?\nAre there beginner or \"fundamentals\" classes?\nWhat classes do you offer?\n\nGetting Started\n\nHow would I sign up for a membership if I decide to join?\nWhat time do you usually open up on a weekday?\n\n#Tools\n\nYou have access to the following dynamic variables to personalize the call:\n\n{{system__caller_id}} - Caller's phone number (voice calls only)\n{{system__called_number}} - Destination phone number (voice calls only)\n{{system__call_duration_secs}} - Call duration in seconds\n{{system__time_utc}} - Current UTC time (ISO format)\n`;\n\n// Clean and make JSON-safe\nfunction toJsonSafeString(str) {\n  return str\n    .replace(/[’‘]/g, \"'\")    // smart apostrophes → '\n    .replace(/[“”]/g, '\"')    // smart quotes → \"\n    .replace(/—/g, \"-\")       // em dash → hyphen\n    .replace(/\\r?\\n/g, \"\\\\n\") // escape newlines\n    .replace(/\\\\/g, \"\\\\\\\\\")   // escape backslashes\n    .replace(/\"/g, '\\\\\"');    // escape double quotes\n}\n\nconst safeJsonString = toJsonSafeString(rawString);\n\nreturn [\n  {\n    json: {\n      type: \"conversation_initiation_client_data\",\n      dynamic_variables: {\n        business_name: $(`Get a specific business--`).first()?.json?.business_name ?? \"\",\n        postal_code:$(`Get a specific business--`).first()?.json?.postal_code ?? \"\",\n        location: $(`Get a specific business--`).first()?.json?.address ?? \"\"\n      },\n      conversation_config_override: {\n        agent: {\n          prompt: {\n            prompt: safeJsonString\n          }\n        }\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        512,
        -544
      ],
      "id": "a5058adc-c37a-4aa4-bad5-162ffe42ec07",
      "name": "Make JSON body For Outbound"
    },
    {
      "parameters": {
        "url": "={{$vars.SupabaseDBUrl}}/audits",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "=eq.{{ $('Get a specific business').item.json.current_audit_id }}"
            },
            {
              "name": "select",
              "value": "*"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$vars.Supabase_API_Key}}"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.Supabase_Service_Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        512,
        -336
      ],
      "id": "89330ad5-4ebc-4af1-97c1-035556bc4810",
      "name": "Get Audit to check if its in-progress"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fbb808ac-d9f3-4d9d-b72a-48a15407e76d",
              "leftValue": "={{ $('Get Audit to check if its in-progress').item.json.status }}",
              "rightValue": "in_progress",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        720,
        -336
      ],
      "id": "7fa537d3-8d7b-4099-b596-b3b8a9360698",
      "name": "Continue if the Audit is currently In_progress"
    },
    {
      "parameters": {
        "url": "={{$vars.SupabaseDBUrl}}/businesses",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "phone_number",
              "value": "=eq.{{ $('Request recieved to send initial call data').item.json.body.called_number.trim() }}"
            },
            {
              "name": "select",
              "value": "=*"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$vars.Supabase_API_Key}}"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.Supabase_Service_Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        288,
        -544
      ],
      "id": "88f1fc43-7cb5-4a62-bfb9-64a8cb1d8428",
      "name": "Get a specific business--"
    },
    {
      "parameters": {
        "url": "={{$vars.SupabaseDBUrl}}/task_groups",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "audit_id",
              "value": "=eq.{{ $('Get a specific business').item.json.current_audit_id }}"
            },
            {
              "name": "business_id",
              "value": "=eq.{{ $('Get a specific business').item.json.id }}"
            },
            {
              "name": "select",
              "value": "*"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{$vars.Supabase_API_Key}}"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $vars.Supabase_Service_Role }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        -336
      ],
      "id": "269fec75-9508-4488-b9d8-40f3456afece",
      "name": "Get TaskGroups of this Audit"
    },
    {
      "parameters": {
        "content": "IVR & Automated System Protocol:\n\nCRITICAL RULE: If the Agent's turn is immediately preceded by a computerized, automated, or menu-driven voice (an IVR, not a human representative), the Agent MUST NOT engage in conversation, use fillers, or ask open-ended questions.\n    Analyze Only: The Agent's sole focus is to listen for the option that leads to a human representative (e.g., \"Press 1 for Sales,\" \"Say 'Operator'\").\n    DTMF/Tool Use Only: The Agent MUST use the play_keypad_touch_tone tool (or press the appropriate DTMF tone) immediately upon hearing the correct prompt (e.g., \"Press 3 to speak to a representative\").\n    No Speech: The Agent MUST NOT speak, acknowledge, or use conversational phrases during the IVR menu or after the IVR menu until and unless a human starts speaking. The Agent's turn should be pure silence followed by the required DTMF tone.\n    Resumption: The Agent only resumes the standard Ana Martinez persona (using fillers, warm tone, questions, etc.) once a human representative speaks."
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1008,
        -624
      ],
      "typeVersion": 1,
      "id": "c6be7568-ee78-477e-b05a-bed292bfdd5e",
      "name": "Sticky Note2"
    }
  ],
  "connections": {
    "Request recieved to send initial call data": {
      "main": [
        [
          {
            "node": "If its Outbound Call or Not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a specific business": {
      "main": [
        [
          {
            "node": "Get Audit to check if its in-progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get OutboundCall Report done During this Audit": {
      "main": [
        [
          {
            "node": "Get OutboundCall Questionaire done During this Audit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get OutboundCall Questionaire done During this Audit": {
      "main": [
        [
          {
            "node": "Combine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine": {
      "main": [
        [
          {
            "node": "Make JSON body with context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If its Outbound Call or Not": {
      "main": [
        [
          {
            "node": "Get a specific business--",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a specific business",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make JSON body with context": {
      "main": [
        [
          {
            "node": "Respond back WIth Initial Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make JSON body For Outbound": {
      "main": [
        [
          {
            "node": "Respond back WIth Initial Data--",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audit to check if its in-progress": {
      "main": [
        [
          {
            "node": "Continue if the Audit is currently In_progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continue if the Audit is currently In_progress": {
      "main": [
        [
          {
            "node": "Get TaskGroups of this Audit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a specific business--": {
      "main": [
        [
          {
            "node": "Make JSON body For Outbound",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get TaskGroups of this Audit": {
      "main": [
        [
          {
            "node": "Get OutboundCall Report done During this Audit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "a2caf551-2c5c-4763-87ad-cc1604142b39",
  "triggerCount": 1,
  "shared": [
    {
      "updatedAt": "2025-06-19T10:53:10.112Z",
      "createdAt": "2025-06-19T10:53:10.112Z",
      "role": "workflow:owner",
      "workflowId": "CcHBrELrSsWhXNYT",
      "projectId": "LuK1n39yspgZn4ID",
      "project": {
        "updatedAt": "2025-06-03T11:30:21.622Z",
        "createdAt": "2025-06-03T10:24:12.778Z",
        "id": "LuK1n39yspgZn4ID",
        "name": "Fuzail Sohail <fuzailsohail40@gmail.com>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "updatedAt": "2025-06-03T10:24:12.781Z",
            "createdAt": "2025-06-03T10:24:12.781Z",
            "userId": "9ba5b413-59b6-4d30-ad4b-75763cd3a374",
            "projectId": "LuK1n39yspgZn4ID",
            "user": {
              "updatedAt": "2025-10-30T07:00:00.000Z",
              "createdAt": "2025-06-03T10:24:12.776Z",
              "id": "9ba5b413-59b6-4d30-ad4b-75763cd3a374",
              "email": "fuzailsohail40@gmail.com",
              "firstName": "Fuzail",
              "lastName": "Sohail",
              "personalizationAnswers": null,
              "settings": {
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "CcHBrELrSsWhXNYT",
                "userActivated": true,
                "userActivatedAt": 1750330808510,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1753277941726
                }
              },
              "disabled": false,
              "mfaEnabled": true,
              "lastActiveAt": "2025-10-30",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": [
    {
      "updatedAt": "2025-08-14T20:27:52.072Z",
      "createdAt": "2025-08-14T20:27:52.072Z",
      "id": "CbQQ2nfApBR0i0Ru",
      "name": "TopRatedCoachAI"
    }
  ]
}